// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tokens.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const saveTokens = `-- name: SaveTokens :exec
INSERT INTO tokens (address, chain_id, protocol, symbol, decimal, name, avatar)
VALUES (unnest($1::bytea[]), unnest($2::numeric[]), unnest($3::text[]), unnest($4::text[]), unnest($5::numeric[]), unnest($6::text[]), unnest($7::text[]))
`

type SaveTokensParams struct {
	Column1 [][]byte         `json:"column_1"`
	Column2 []pgtype.Numeric `json:"column_2"`
	Column3 []string         `json:"column_3"`
	Column4 []string         `json:"column_4"`
	Column5 []pgtype.Numeric `json:"column_5"`
	Column6 []string         `json:"column_6"`
	Column7 []string         `json:"column_7"`
}

func (q *Queries) SaveTokens(ctx context.Context, arg SaveTokensParams) error {
	_, err := q.db.Exec(ctx, saveTokens,
		arg.Column1,
		arg.Column2,
		arg.Column3,
		arg.Column4,
		arg.Column5,
		arg.Column6,
		arg.Column7,
	)
	return err
}
